"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const extension_1 = require("@roots/bud-framework/extension");
const decorators_1 = require("@roots/bud-framework/extension/decorators");
let BudPresetWordPress = class BudPresetWordPress extends extension_1.Extension {
    get origin() {
        return this._origin;
    }
    set origin(origin) {
        this._origin = origin instanceof URL ? origin : new URL(origin);
    }
    async init() {
        if (!this.app.env.has('WP_HOME') || !this.app.env.isString('WP_HOME'))
            return;
        this.origin = this.app.env.get('WP_HOME');
    }
    async register() {
        if (!this.origin)
            return;
        try {
            this.proxyOrigin(this.origin);
        }
        catch (err) {
            this.logger.warn(`Tried to set proxy based on value of WP_HOME but failed\n`, `WP_HOME is set as: ${this.origin}`, `\n`, err);
        }
    }
    proxyOrigin(origin) {
        this.origin = origin;
        this.app.proxy(this.origin);
        return this;
    }
};
__decorate([
    decorators_1.bind
], BudPresetWordPress.prototype, "init", null);
__decorate([
    decorators_1.bind
], BudPresetWordPress.prototype, "register", null);
__decorate([
    decorators_1.bind
], BudPresetWordPress.prototype, "proxyOrigin", null);
BudPresetWordPress = __decorate([
    (0, decorators_1.label)('@roots/bud-preset-wordpress'),
    (0, decorators_1.dependsOn)([
        '@roots/bud-entrypoints',
        '@roots/bud-preset-recommend',
        '@roots/bud-react',
        '@roots/bud-wordpress-externals',
        '@roots/bud-wordpress-dependencies',
        '@roots/bud-wordpress-manifests',
    ]),
    (0, decorators_1.options)({ replaceLink: true }),
    (0, decorators_1.expose)('wordpress')
], BudPresetWordPress);
exports.default = BudPresetWordPress;
