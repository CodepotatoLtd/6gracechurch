import { Bud } from './bud';
/**
 * Module resolver
 *
 * @public
 */
export declare class Module {
    app: Bud;
    /**
     * Class constructor
     *
     * @public
     */
    constructor(app: Bud);
    /**
     * @public
     * @decorator `@bind`
     */
    arr(request: string | Array<string | [string, string]>): Array<[string, string]>;
    /**
     * @public
     * @decorator `@bind`
     */
    reduceUntil<T = any>(data: Array<[string, string]>, fn: (...data: [string, string]) => T): T;
    /**
     * @public
     * @decorator `@bind`
     */
    path(candidates: string | Array<string | [string, string]>): Promise<string>;
    /**
     * @public
     * @decorator `@bind`
     */
    manifestPath(paths: string | Array<string | [string, string]>): Promise<string>;
    /**
     * @public
     * @decorator `@bind`
     */
    readManifest(paths: string | Array<string | [string, string]>): Promise<any>;
    /**
     * @public
     * @decorator `@bind`
     */
    resolve(importPaths: string | Array<string | [string, string]>): string;
    /**
     * @public
     * @decorator `@bind`
     */
    import<T = any>(importPaths: string | Array<string | [string, string]>): T;
    /**
     * @public
     * @decorator `@bind`
     */
    resolvePreferred(name: string, ...importPaths: Array<string>): string;
}
//# sourceMappingURL=module.d.ts.map