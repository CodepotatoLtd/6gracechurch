"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.use = void 0;
const bud_support_1 = require("@roots/bud-support");
const use_utilities_1 = require("./use.utilities");
const { isArray, isFunction } = bud_support_1.lodash;
const use = async function (source) {
    const bud = this;
    const addExtension = async (source) => {
        if (!source) {
            bud.error(`extension source is not defined`);
        }
        let instance;
        if (isFunction(source)) {
            instance = new source(bud);
        }
        else
            instance = source;
        if (!instance.label) {
            instance.label = (0, use_utilities_1.generateName)(instance);
        }
        if (bud.extensions.has(instance.label)) {
            bud.info(`extension "${instance.label}" is already registered. skipping`);
            return bud;
        }
        if ((0, use_utilities_1.isPlugin)(instance))
            instance.make = () => instance;
        await bud.extensions.add(instance);
    };
    !isArray(source)
        ? await addExtension(source)
        : await Promise.all(source.map(addExtension));
    return bud;
};
exports.use = use;
