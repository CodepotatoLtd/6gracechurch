"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.report = void 0;
const bud_support_1 = require("@roots/bud-support");
const components = __importStar(require("./components"));
const theme_1 = require("./theme");
const webpackMessage = __importStar(require("./webpack.message"));
const report = ({ stats, warnings, errors, app, }) => {
    const output = [];
    errors && output.push(...errors.map(webpackMessage.makeError));
    warnings && output.push(...warnings.map(webpackMessage.makeWarning));
    stats?.children?.map((compilation, i) => {
        if (stats.children.length > 1) {
            output.push(bud_support_1.chalk
                .hex(errors.length ? theme_1.theme.red : theme_1.theme.green)
                .underline(`\n${errors.length ? bud_support_1.figures.cross : bud_support_1.figures.tick} ${compilation.name}\n\n`));
        }
        compilation?.entrypoints &&
            output.push(...components.report({
                appName: app.name,
                count: [i + 1, stats?.children?.length ?? 1],
                context: app.context,
                compilation,
            }));
        output.push([
            components.timing(app, compilation),
            ...components.summary(app, compilation),
        ].join(''));
        app.hooks.filter('feature.log') &&
            output.push(...components.framework(app));
    });
    return output.filter(Boolean).join('');
};
exports.report = report;
